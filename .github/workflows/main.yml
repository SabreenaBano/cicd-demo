name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build, tag, and push image to DockerHub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_NAME: my-image
        run: |
          docker build -t $DOCKERHUB_USERNAME/$IMAGE_NAME .
          docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:latest

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test with pytest
        run: |
          pip install pytest
          pytest test.py

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH for EC2 deployment
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > /tmp/ec2_key.pem
          cat /tmp/ec2_key.pem
          chmod 600 /tmp/ec2_key.pem

      - name: Deploy to EC2
        env:
          EC2_IP: ${{ secrets.EC2_IP }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_NAME: my-image
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/ec2_key.pem ubuntu@$EC2_IP << 'EOF'
            docker ps
            docker pull $DOCKERHUB_USERNAME/$IMAGE_NAME:latest
          EOF

